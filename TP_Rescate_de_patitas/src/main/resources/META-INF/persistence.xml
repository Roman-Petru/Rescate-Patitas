<?xml version="1.0" encoding="UTF-8"?>
<persistence xmlns="http://java.sun.com/xml/ns/persistence"
             xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xsi:schemaLocation="http://java.sun.com/xml/ns/persistence
    http://java.sun.com/xml/ns/persistence/persistence_2_0.xsd"
             version="2.0">

    <persistence-unit name="db" transaction-type="RESOURCE_LOCAL">
        <provider>org.hibernate.jpa.HibernatePersistenceProvider</provider>

        <properties>
            <property name="hibernate.archive.autodetection" value="class"/>

            <!--
            mysql://b0ebfaa9169e76:60023279@us-cdbr-east-05.cleardb.net/heroku_947b636944ea7af?reconnect=true
            <property name="hibernate.connection.url" value="jdbc:mysql://localhost:3306/rescate-de-patitas-g4" />
            <property name="hibernate.connection.username" value="root" />
            <property name="hibernate.connection.password" value="123456" />
 -->

            <property name="hibernate.connection.driver_class" value="com.mysql.jdbc.Driver" />
            <property name="hibernate.connection.url" value="jdbc:mysql://us-cdbr-east-05.cleardb.net/heroku_947b636944ea7af" />
            <property name="hibernate.connection.username" value="b0ebfaa9169e76" />
            <property name="hibernate.connection.password" value="60023279" />

            <property name="hibernate.show_sql" value="true" />
            <!-- Enable the logging of all the generated SQL statements to the console -->

            <property name="hibernate.format_sql" value="true" />
            <!-- Format the generated SQL statement to make it more readable -->

            <property name="use_sql_comments" value="true" />
            <!-- Hibernate will put comments inside all generated SQL statements to hint whatâ€™s the generated SQL trying to do -->

            <property name="hibernate.hbm2ddl.auto" value="validate" />
            <!--
                - validate: validate the schema, makes no changes to the database.
                - update: update the schema.
                - create: creates the schema, destroying previous data.
                - create-drop: drop the schema when the SessionFactory is closed explicitly, typically when the application is stopped.
                - none: does nothing with the schema, makes no changes to the database
             -->
        </properties>

    </persistence-unit>

</persistence>